# --------------------------------------------------------------------------- #
#                                                                             #
#     main.py                                        ::::      ::::::::       #
#                                                  ++: :+:   :+:    :+:       #
#     PROJECT: Advent of Code                    #:+   +:+  +:+               #
#                                              +#++:++#++: +#+                #
#                                             +#+     +#+ +#+                 #
#     AUTHOR: Jorge Lopez Puebla             ##+     #+# #+#    #+#           #
#     LAST UPDATE: 08/12/2024               ###     ###  ########             #
#                                                                             #
# --------------------------------------------------------------------------- #

memory: [[str]] = []
antennas: {str: [[int, int]]} = {}

# Read input file
with open('input.txt', 'r') as file:
    for row, line in enumerate(file.readlines()):
        line_chars = []
        for col, char in enumerate(line):
            line_chars.append(char)
            if char.isdigit() or char.isupper() or char.islower():
                if char not in antennas.keys():
                    antennas[char] = [[row, col]]
                else:
                    antennas.get(char).append([row, col])
        memory.append(line_chars)

# FIRST PART: Count the number of antinodes generated by the different frequency antennas in the input text
antinodes: ([int, int]) = set()

for freq in antennas.keys():
    if len(antennas[freq]) < 2:
        continue
    for antenna in antennas[freq]:
        for other_antenna in antennas[freq]:
            if antenna == other_antenna:
                continue
            dx, dy = other_antenna[0] - antenna[0], other_antenna[1] - antenna[1]
            antinode1 = [antenna[0] - dx, antenna[1] - dy]
            antinode2 = [other_antenna[0] + dx, other_antenna[1] + dy]
            for antinode in [antinode1, antinode2]:
                if 0 <= antinode[0] < len(memory) and 0 <= antinode[1] < len(memory[0]):
                    antinodes.add(antinode)
                    print(f"Antinode: {antinode} <- {antenna} {other_antenna}")

print("\n\033[37mThe number of antinodes is:\033[0m\033[1m", len(antinodes))

# 522 too high
# 217 too high

# SECOND PART
